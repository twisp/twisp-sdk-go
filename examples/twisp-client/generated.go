// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package main

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// __checkBalanceInput is used internally by genqlient
type __checkBalanceInput struct {
	AccountID string `json:"accountID"`
}

// GetAccountID returns __checkBalanceInput.AccountID, and is useful for accessing the field via an interface.
func (v *__checkBalanceInput) GetAccountID() string { return v.AccountID }

// checkBalanceBalances_account includes the requested fields of the GraphQL type balances_account.
type checkBalanceBalances_account struct {
	Account_id string `json:"account_id"`
	Journal_id int64  `json:"journal_id"`
	Layer_id   int64  `json:"layer_id"`
	Cr_balance int64  `json:"cr_balance"`
	Dr_balance int64  `json:"dr_balance"`
}

// GetAccount_id returns checkBalanceBalances_account.Account_id, and is useful for accessing the field via an interface.
func (v *checkBalanceBalances_account) GetAccount_id() string { return v.Account_id }

// GetJournal_id returns checkBalanceBalances_account.Journal_id, and is useful for accessing the field via an interface.
func (v *checkBalanceBalances_account) GetJournal_id() int64 { return v.Journal_id }

// GetLayer_id returns checkBalanceBalances_account.Layer_id, and is useful for accessing the field via an interface.
func (v *checkBalanceBalances_account) GetLayer_id() int64 { return v.Layer_id }

// GetCr_balance returns checkBalanceBalances_account.Cr_balance, and is useful for accessing the field via an interface.
func (v *checkBalanceBalances_account) GetCr_balance() int64 { return v.Cr_balance }

// GetDr_balance returns checkBalanceBalances_account.Dr_balance, and is useful for accessing the field via an interface.
func (v *checkBalanceBalances_account) GetDr_balance() int64 { return v.Dr_balance }

// checkBalanceResponse is returned by checkBalance on success.
type checkBalanceResponse struct {
	Balances_account []checkBalanceBalances_account `json:"balances_account"`
}

// GetBalances_account returns checkBalanceResponse.Balances_account, and is useful for accessing the field via an interface.
func (v *checkBalanceResponse) GetBalances_account() []checkBalanceBalances_account {
	return v.Balances_account
}

func checkBalance(
	ctx context.Context,
	client graphql.Client,
	accountID string,
) (*checkBalanceResponse, error) {
	__input := __checkBalanceInput{
		AccountID: accountID,
	}
	var err error

	var retval checkBalanceResponse
	err = client.MakeRequest(
		ctx,
		"checkBalance",
		`
query checkBalance ($accountID: String) {
	balances_account(index: account_id, where: {partition:[$accountID]}) {
		account_id
		journal_id
		layer_id
		cr_balance
		dr_balance
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}
